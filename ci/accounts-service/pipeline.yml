---
resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: pivotalpa/cf-cli-resource
    tag: latest

groups:
- name: develop
  jobs:
  - prepare-cf-env
  - build-accounts
#  - cf-push-accounts
- name: destroy
  jobs:
  - destroy

cf-params: &cf-params
  CF_API_URL: {{cf-api-url}}
  CF_SKIP_SSL: {{cf-skip-ssl}}
  CF_USERNAME: {{cf-username}}
  CF_PASSWORD: {{cf-password}}
  CF_ORG: {{cf-org}}
  CF_SPACE: {{cf-space}}

jobs:
- name: destroy
  public: true
  plan:
  - get: accounts-service
  - task: destroy
    file: accounts-service/tasks/destroy/task.yml
    params:
      <<: *cf-params

- name: build-accounts
  public: true
  serial: true
  plan:
  - get: accounts-service
    trigger: true
  - task: build
    file: accounts-service/ci/tasks/build-account-service/task.yml
    params:
      ARTIFACT_ID: accounts
  - put: cf-zero-downtime-push
    resource: cf-env
    params:
      command: zero-downtime-push
      manifest: accounts-service/manifest.yml

- name: prepare-cf-env
  public: true
  serial: true
  plan:
  - get: accounts-service
    passed: [ build-accounts ]
    trigger: true
  - aggregate:
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: {{cf-db-service}}
        plan: {{cf-db-service-plan}}
        service_instance: {{cf-db-service-name}}
        timeout: 300
        wait_for_service: true
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-config-server
        plan: standard
        service_instance: config-server
        timeout: 300
        wait_for_service: true
        configuration: '{ "count": 2, "git": { "uri": "https://github.com/bkamysz-pivotal/cf-SpringBootTrader-config", "label": "master" } }'
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-service-registry
        plan: standard
        service_instance: discovery-service
        timeout: 300
        wait_for_service: true
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: p-circuit-breaker-dashboard
        plan: standard
        service_instance: circuit-breaker-dashboard
        timeout: 300
        wait_for_service: true

#- name: cf-push-accounts
#  public: true
#  serial: true
#  plan:
#  - get: accounts-service
#    passed: [ prepare-cf-env ]
#    trigger: true
#  - get: build-output
#  - put: cf-zero-downtime-push
#    resource: cf-env
#    params:
#      command: zero-downtime-push
#      manifest: accounts-service/manifest.yml

resources:
- name: accounts-service
  type: git
  source:
    uri: {{git-uri}}
    branch: {{git-branch}}
- name: cf-env
  type: cf-cli-resource
  source:
    api: {{cf-api-url}}
    username: {{cf-username}}
    password: {{cf-password}}
    skip_cert_check: true
    org: {{cf-org}}
    space: {{cf-space}}
