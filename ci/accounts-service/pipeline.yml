---
resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: pivotalpa/cf-cli-resource
    tag: latest

groups:
- name: develop
  jobs:
  - prepare-cf-env
  - build-accounts
  - cf-push-accounts
#- name: publish
#  jobs:
#  - accounts-major
#  - accounts-minor
- name: destroy
  jobs:
  - destroy

cf-params: &cf-params
  CF_API_URL: {{cf-api-url}}
  CF_SKIP_SSL: {{cf-skip-ssl}}
  CF_USERNAME: {{cf-username}}
  CF_PASSWORD: {{cf-password}}
  CF_ORG: {{cf-org}}
  CF_SPACE: {{cf-space}}

jobs:
- name: destroy
  public: true
  plan:
  - get: accounts-service
  - task: destroy
    file: accounts-service/tasks/destroy/task.yml
    params:
      <<: *cf-params

- name: build-accounts
  public: true
#  serial_groups: [ accounts-version ]
  serial: true
  plan:
#  - aggregate:
  - get: accounts-service
    trigger: true
    - get: project
      resource: accounts-service
      trigger: true
#    - get: version
#      resource: accounts-version
#      params: { pre: rc }
  - task: build
    file: accounts-service/ci/tasks/build-account-service/task.yml
    params:
      ARTIFACT_ID: accounts
#  - put: accounts-milestone
#    params: { file: build-output/accounts-*.jar }
#  - put: accounts-version
#    params: { file: version/number }

- name: prepare-cf-env
  public: true
  serial: true
  plan:
  - get: accounts-service
    passed: [ build-accounts ]
    trigger: true
#  - task: cf-env
#    file: accounts-service/ci/tasks/create-services/task.yml
#    params:
#      <<: *cf-params
#      CF_DB_SERVICE: {{cf-db-service}}
#      CF_CONFIG_SERVER_URI: {{cf-config-server-uri}}
#      CF_CONFIG_SERVER_LABEL: {{cf-config-server-label}}
  - put: cf-create-service
    resource: cf-env
    params:
      command: create-service
      service: {{cf-db-service}}
      plan: {{cf-db-service-plan}}
      service_instance: {{cf-db-service-name}}
      timeout: 300
      wait_for_service: true

- name: cf-push-accounts
  public: true
  serial: true
  plan:
#  - aggregate:
  - get: accounts-service
    passed: [ prepare-cf-env ]
    trigger: true
#    - get: release
#      resource: accounts-milestone
#      passed: [ build-accounts ]
#      trigger: true
  - task: prepare-manifest
    file: accounts-service/ci/tasks/cf-push/task.yml
    params:
      <<: *cf-params
      CF_APP_NAME: {{cf-accounts-service-name}}
      CF_APP_HOST: {{cf-accounts-service-host}}
      CF_APP_SERVICES: {{cf-accounts-service-services}}
      CF_ARTIFACT_ID: accounts
  - put: cf-deliver
    params:
      manifest: prepare-manifest-output/manifest.yml
      current_app_name: {{cf-accounts-service-name}}

#- name: accounts-major
#  public: true
#  serial_groups: [ accounts-version ]
#  plan:
#  - get: accounts-version
#    params: { bump: major, pre: rc }
#  - put: accounts-version
#    params: { file: accounts-version/number }
#
#- name: accounts-minor
#  public: true
#  serial_groups: [ accounts-version ]
#  plan:
#  - get: accounts-version
#    params: { bump: minor, pre: rc }
#  - put: accounts-version
#    params: { file: accounts-version/number }

resources:
- name: accounts-service
  type: git
  source:
    uri: {{git-uri}}
    branch: {{git-branch}}

#- name: accounts-version
#  type: semver
#  source:
#    driver: git
#    uri: {{git-uri}}
#    branch: {{git-branch}}
#    file: number
#    initial_version: 1.0.0-rc.0
#    private_key: {{git-private-key}}

#- name: accounts-milestone
#  type: s3
#  source:
#    bucket: {{s3-bucket-milestone}}
#    regexp: accounts-(.*).jar
#    access_key_id: {{s3-access-key-id}}
#    secret_access_key: {{s3-secret-access-key}}
#    endpoint: {{s3-endpoint}}
#
#- name: cf-deliver
#  type: cf
#  source:
#    api: {{cf-api-url}}
#    skip_cert_check: true
#    username: {{cf-username}}
#    password: {{cf-password}}
#    organization: {{cf-org}}
#    space: {{cf-space}}

- name: cf-env
  type: cf-cli-resource
  source:
    api: {{cf-api-url}}
    username: {{cf-username}}
    password: {{cf-password}}
    skip_cert_check: true
    org: {{cf-org}}
    space: {{cf-space}}
